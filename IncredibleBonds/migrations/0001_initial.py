# Generated by Django 2.0.4 on 2018-06-19 17:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BleedLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialt', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FactorManufacture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Url', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Hemophilia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=20)),
                ('Other_Names', models.TextField(default=None)),
                ('Factor_Deficiency', models.IntegerField(unique=True)),
                ('Description', models.TextField(default=None, max_length=400)),
                ('Diagnosis', models.TextField(default=None)),
                ('Treatment', models.TextField(default=None)),
                ('Symptoms', models.TextField(default=None)),
                ('Dosage_denominator', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(decimal_places=20, max_digits=25)),
                ('longitude', models.DecimalField(decimal_places=20, max_digits=25)),
            ],
        ),
        migrations.CreateModel(
            name='InfusionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=15)),
                ('date', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(max_length=100)),
                ('place_of_bleeding', models.CharField(max_length=30)),
                ('units', models.IntegerField()),
                ('photo', models.ImageField(upload_to='')),
                ('factor_manufacture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IncredibleBonds.FactorManufacture')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_Ship', models.IntegerField(choices=[(1, 'Father'), (2, 'Mother'), (3, 'Guardian')])),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('factor_level', models.DecimalField(decimal_places=2, max_digits=10)),
                ('inhibitor_Status', models.BooleanField()),
                ('family_History', models.BooleanField()),
                ('factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IncredibleBonds.Hemophilia')),
            ],
        ),
        migrations.CreateModel(
            name='Severity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=20)),
                ('Max_Factor_Level', models.IntegerField()),
                ('Min_Factor_Level', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('blood_group', models.IntegerField(choices=[(1, 'A+'), (2, 'A-'), (3, 'B+'), (4, 'B-'), (5, 'O+'), (6, 'O-'), (7, 'AB+'), (8, 'AB-'), (9, 'Bombay Group')], default=1)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('phone_Number', models.CharField(max_length=15)),
                ('state', models.CharField(max_length=20)),
                ('district', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=40)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='parent',
            name='patient',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='IncredibleBonds.Patient'),
        ),
        migrations.AddField(
            model_name='parent',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='infusionlog',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IncredibleBonds.Patient'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bleedlog',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IncredibleBonds.Patient'),
        ),
    ]
